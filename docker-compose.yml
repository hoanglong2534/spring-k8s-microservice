version: '3.8'

services:
  # PostgreSQL for User Service
  user-db:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - microservice-network

  # PostgreSQL for Order Service
  order-db:
    image: postgres:15
    container_name: order-db
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5433:5432"
    volumes:
      - order_db_data:/var/lib/postgresql/data
    networks:
      - microservice-network

  # User Service
  user-service:
    build:
      context: ./service/user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/user_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
    ports:
      - "8081:8081"
    depends_on:
      - user-db
    networks:
      - microservice-network
    restart: unless-stopped

  # Order Service
  order-service:
    build:
      context: ./service/order-service
      dockerfile: Dockerfile
    container_name: order-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-db:5432/order_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
    ports:
      - "8082:8082"
    depends_on:
      - order-db
    networks:
      - microservice-network
    restart: unless-stopped

volumes:
  user_db_data:
  order_db_data:

networks:
  microservice-network:
    driver: bridge



