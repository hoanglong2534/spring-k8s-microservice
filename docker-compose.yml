version: '3.9'

services:
  user-service:
    depends_on:
      postgres-user:
        condition: service_healthy
    container_name: user-service
    build:
      context: ./service/user-service
      dockerfile: Dockerfile
    image: api-image-user
    ports:
      - '8081:8081'
    networks:
        - backend-network

  order-service:
      depends_on:
        postgres-order:
          condition: service_healthy
      container_name: order-service
      build:
        context: ./service/order-service
        dockerfile: Dockerfile
      image: api-image-order
      ports:
          - '8082:8082'
      networks:
          - backend-network

  postgres-user:
    container_name: user-db
    image: postgres
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d user_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - '5432:5432'

  postgres-order:
    container_name: order-db
    image: postgres
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d order_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - '5433:5432'


networks:
    backend-network:
        driver: bridge